{"version":3,"sources":["skills.js"],"names":["_rotationSpeed","Symbol","_clickedId","_easing","_speedMeasure","_motionData","_dynamicContent","_calculateEntryValues","_computeEasing","_computeRotatingTime","_applyEasing","_computeAvgSpeed","_getTargetAngle","_shouldChangeDirection","_restoreAnimation","_accelerate","HtmlElement","constructor","element","copy","clone","remove","append","parent","Slider","speed","baseSpeed","faces","children","start","undefined","stop","lastMeasuredAngle","speedArr","avgSpeed","isAboutToStop","angleWhenClicked","currentAngle","targetAngle","move","$","skillsHandler","counter","e","window","event","tlSkills","TimelineMax","paused","slide","currentTarget","techList","find","skillsList","Modernizr","svgclippaths","icon","buttons","length","fromTo","scale","opacity","startAnimFrom","isActive","Number","time","toFixed","reverse","play","mqMobile","matchMedia","csstransforms3d","preserve3d","matches","swiper","Swiper","navigation","nextEl","prevEl","addClass","on","addListener","location","reload"],"mappings":"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","file":"skills.js","sourcesContent":["'use strict';\n\n/* Create symbols for emulate private class members */\n\nconst\n\t_rotationSpeed = Symbol('rotationSpeed'),\n\t_clickedId = Symbol('clickedId'),\n\t_easing = Symbol('easing'),\n\t_speedMeasure = Symbol('speedMeasure'),\n\t_motionData = Symbol('motionData'),\n\t_dynamicContent = Symbol('dynamicContent'),\n\t_calculateEntryValues = Symbol('calculateEntryValues'),\n\t_computeEasing = Symbol('computeEasing'),\n\t_computeRotatingTime = Symbol('_computeRotatingTime'),\n\t_applyEasing = Symbol('applyEasing'),\n\t_computeAvgSpeed = Symbol('computeAvgSpeed'),\n\t_getTargetAngle = Symbol('getTargetAngle'),\n\t_shouldChangeDirection = Symbol('shouldChangeDirection'),\n\t_restoreAnimation = Symbol('restoreAnimation'),\n\t_accelerate = Symbol('accelerate');\n/* Htlm element class */\n\nclass HtmlElement {\n\tconstructor(element) {\n\t\tthis.element = element;\n\t}\n\tcopy() {\n\t\treturn this.element.clone();\n\t}\n\tremove() {\n\t\tthis.element.remove();\n\t}\n\tappend(parent) {\n\t\tthis.element.append(parent);\n\t}\n}\n\nclass Slider extends HtmlElement {\n\tconstructor(element, speed = .7) {\n\t\tsuper(element);\n\n\t\tthis.baseSpeed = speed > 1 ? 1 : speed;\n\t\tthis.faces = this.element.children('.swiper-slide');\n\n\t\tthis[_rotationSpeed] = speed > 1 ? 1 : speed;\n\t\tthis[_clickedId] = '';\n\t\tthis[_easing] = [];\n\t\tthis[_speedMeasure] = {\n\t\t\tstart: undefined,\n\t\t\tstop: undefined,\n\t\t\tlastMeasuredAngle: undefined,\n\t\t\tspeedArr: [],\n\t\t\tavgSpeed: undefined\n\t\t};\n\t\tthis[_motionData] = {\n\t\t\tisAboutToStop: false,\n\t\t\tangleWhenClicked: undefined,\n\t\t\tcurrentAngle: 0,\n\t\t\ttargetAngle: undefined,\n\t\t\tmove: true\n\t\t};\n\t}\n}\n\n$(() => {\n\t/* Skills animation event handler IIFE */\n\n\tconst skillsHandler = (() => {\n\t\tlet counter = 0;\n\n\t\treturn (e) => {\n\t\t\t// check if e exist\n\t\t\te = e || window.event;\n\n\t\t\t// variables\n\n\t\t\tconst\n\t\t\t\ttlSkills = new TimelineMax({ paused: true }),\n\t\t\t\tslide = $(e.currentTarget),\n\t\t\t\ttechList = slide.find('.techs'),\n\t\t\t\tskillsList = Modernizr.svgclippaths ? slide.find('.svg-clipped') : slide.find('.svg-fallback'),\n\t\t\t\ticon = slide.find('.icon-wrapper'),\n\t\t\t\tbuttons = $('.swiper-button-prev,.swiper-button-next');\n\n\t\t\t/* only for 3d layout */\n\n\t\t\tif ($('#skills-content._3d').length > 0) {\n\t\t\t\ttlSkills\n\t\t\t\t\t.fromTo(slide, 1, { scale: .8 }, { scale: 1 }, 'firstStage');\n\t\t\t}\n\n\t\t\ttlSkills\n\t\t\t\t.fromTo(icon, 1, { '-webkit-filter': 'grayscale(0%)', opacity: 1 }, { '-webkit-filter': 'grayscale(90%)', opacity: .05 }, 'firstStage');\n\n\t\t\t// animiation play from current time if active\n\n\t\t\tconst startAnimFrom = tlSkills.isActive() ? Number((tlSkills.time()).toFixed(1)) : 0;\n\n\t\t\t// animation direction reversed each time\n\n\t\t\tcounter % 2 ? tlSkills.reverse(startAnimFrom) : tlSkills.play(startAnimFrom);\n\t\t\tcounter++;\n\t\t};\n\t})();\n\n\t/* Media query for smaller screens*/\n\n\tconst mqMobile = window.matchMedia('(max-width: 1023px)');\n\n\t/* Main condition: either swiper mode or 3d slider*/\n\n\tif (!Modernizr.csstransforms3d || !Modernizr.preserve3d || mqMobile.matches) {\n\n\t\t/* Swiper */\n\n\t\tconst swiper = new Swiper('.swiper-container', {\n\t\t\tnavigation: {\n\t\t\t\tnextEl: '.swiper-button-next',\n\t\t\t\tprevEl: '.swiper-button-prev',\n\t\t\t},\n\t\t});\n\n\t} else {\n\n\t\t/* 3d-slider */\n\n\t\t$('#skills-content').addClass('_3d');\n\n\t\t$('.swiper-slide').on('click', (e) => {\n\t\t\tskillsHandler(e);\n\t\t});\n\n\n\n\t\t/* If in 3d mode reload page on matchmedia to change on flat */\n\n\t\tmqMobile.addListener(() => {\n\t\t\twindow.location.reload();\n\t\t});\n\n\t}\n});"]}